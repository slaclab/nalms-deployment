# This workflow will validate the LCLS csv file and convert it to xml and validate that as well. When
# a PR is approved and merged, it will then commit the generated xml file to main. The main idea here is that
# the end user only needs to edit csv files and not worry about the xml.

name: Convert LCLS csv to xml

on:
  push:
    branches: [ "main", "csv_compiler" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install package needed for linting an xml file
      run: sudo apt-get install libxml2-utils
    - name: Install python requirements
      run: |
        pip install --upgrade pip
        pip install --requirement dev-requirements.txt
    - name: Combine subsystems into lcls.csv
      run: python xml/build_lcls.py
    - name: Validate csv file is compatible with Phoebus
      run: python xml/validate_csv_for_phoebus.py xml/lcls.csv
    - name: Convert csv to xml
      run: python xml/alarm_csv2xml.py -i xml/lcls.csv -c LCLS
    - name: Validate Phoebus will parse xml correctly
      run: python xml/validate_xml_for_phoebus.py
    - name: Lint with xmllint
      run: ./xml/lint_xml.sh
      shell: bash
    - name: push to main
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
        export PRNUM=$(git log --grep="Merge pull request" --pretty=oneline -1 | sed -En "s/.*#([[:digit:]]+).*/\1/p")
        git commit -am "CI/MNT: convert csv to xml from PR# $PRNUM"
        git push
      shell: bash
      continue-on-error: true
